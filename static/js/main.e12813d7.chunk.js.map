{"version":3,"sources":["components/Navbar/DetailsNav.jsx","assets/icon-hamburger.svg","assets/icon-chevron.svg","components/Navbar/NavItem.jsx","components/Navbar/Navbar.jsx","components/Navbar/PlanetFact.jsx","components/Navbar/Planet.jsx","App.jsx","index.js"],"names":["DetailsNav","name","activeTab","setActiveTab","useEffect","clickHandler","e","target","innerHTML","toLowerCase","className","onClick","NavItem","setPlanet","toggleMenu","style","width","height","borderRadius","backgroundColor","toUpperCase","src","chevron","alt","Navbar","data","useState","isActive","setIsActive","navActive","setNavActive","mobileNavItems","map","planet","navItems","hamburger","PlanetFact","title","fact","Planet","currentPlanet","isCore","setIsCore","overview","setOverview","overviewSource","setOverviewSource","rotationTime","setRotationTime","revolutionTime","setRevolutionTime","radius","setRadius","avarageTemp","setAvarageTemp","i","length","content","source","structure","geology","rotation","revolution","temperature","getDetails","href","rel","App","setCurrentPlanet","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e12813d7.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction DetailsNav({ name, activeTab, setActiveTab }) {\r\n  useEffect(() => {}, [name]);\r\n\r\n  const clickHandler = (e) => {\r\n    setActiveTab(e.target.innerHTML.toLowerCase());\r\n  };\r\n\r\n  return (\r\n    <ul className='details-nav-list'>\r\n      <li\r\n        className={`details-item ${name} ${\r\n          activeTab === \"overview\" ? \"active\" : \"\"\r\n        }`}\r\n        onClick={clickHandler}\r\n      >\r\n        OVERVIEW\r\n      </li>\r\n      <li\r\n        className={`details-item ${name} ${\r\n          activeTab === \"structure\" ? \"active\" : \"\"\r\n        }`}\r\n        onClick={clickHandler}\r\n      >\r\n        STRUCTURE\r\n      </li>\r\n      <li\r\n        className={`details-item ${name} ${\r\n          activeTab === \"surface\" ? \"active\" : \"\"\r\n        }`}\r\n        onClick={clickHandler}\r\n      >\r\n        SURFACE\r\n      </li>\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default DetailsNav;\r\n\r\nDetailsNav.propTypes = {\r\n  name: PropTypes.string,\r\n  activeTab: PropTypes.string,\r\n  setActiveTab: PropTypes.func,\r\n};\r\n","export default __webpack_public_path__ + \"static/media/icon-hamburger.05a40a49.svg\";","export default __webpack_public_path__ + \"static/media/icon-chevron.8915cee9.svg\";","import PropTypes from \"prop-types\";\r\n\r\nimport chevron from \"../../assets/icon-chevron.svg\";\r\n\r\nfunction NavItem({ name, setPlanet, toggleMenu }) {\r\n  const clickHandler = () => {\r\n    toggleMenu();\r\n    setPlanet(name.toLowerCase());\r\n  };\r\n\r\n  return (\r\n    <li className='nav-item' onClick={clickHandler}>\r\n      <div\r\n        style={{\r\n          width: \"1.5em\",\r\n          height: \"1.5em\",\r\n          borderRadius: \"100%\",\r\n          backgroundColor: `var(--clr-${name.toLowerCase()})`,\r\n        }}\r\n      ></div>\r\n      <h3>{name.toUpperCase()}</h3>\r\n      <img src={chevron} alt='chevron indicator' width='10px' />\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default NavItem;\r\n\r\nNavItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  setPlanet: PropTypes.func.isRequired,\r\n  toggleMenu: PropTypes.func,\r\n};\r\n","import { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport hamburger from \"../../assets/icon-hamburger.svg\";\r\nimport NavItem from \"./NavItem\";\r\n\r\nfunction Navbar({ data, setPlanet }) {\r\n  const [isActive, setIsActive] = useState(false);\r\n  const [navActive, setNavActive] = useState(\"\");\r\n  const toggleMenu = () => {\r\n    setIsActive(!isActive);\r\n  };\r\n\r\n  const mobileNavItems = data.map((planet) => {\r\n    return (\r\n      <NavItem\r\n        key={planet.name}\r\n        name={planet.name}\r\n        setPlanet={setPlanet}\r\n        toggleMenu={toggleMenu}\r\n      />\r\n    );\r\n  });\r\n\r\n  const navItems = data.map((planet) => {\r\n    return (\r\n      <li\r\n        key={planet.name}\r\n        className={\r\n          navActive === planet.name\r\n            ? `${planet.name.toLowerCase()} nav-active`\r\n            : \"\"\r\n        }\r\n        onClick={() => {\r\n          setPlanet(planet.name.toLowerCase());\r\n          setNavActive(planet.name);\r\n        }}\r\n      >\r\n        {planet.name.toUpperCase()}\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <nav className='navbar'>\r\n      <h1>THE PLANETS</h1>\r\n      <img src={hamburger} alt='menu toggle' onClick={toggleMenu} />\r\n      {isActive && (\r\n        <div className='dropdown'>\r\n          <ul className='nav-items-mobile'>{mobileNavItems}</ul>\r\n        </div>\r\n      )}\r\n      <div className='nav-items'>\r\n        <ul>{navItems}</ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n\r\nNavbar.propTypes = {\r\n  data: PropTypes.array,\r\n  setPlanet: PropTypes.func,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction PlanetFact({ title, fact }) {\r\n  return (\r\n    <li className='fact'>\r\n      <p>{title.toUpperCase()}</p>\r\n      <p>{fact}</p>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default PlanetFact;\r\n\r\nPlanetFact.propTypes = {\r\n  title: PropTypes.string,\r\n  fact: PropTypes.string,\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport PlanetFact from \"./PlanetFact\";\r\nimport DetailsNav from \"./DetailsNav\";\r\nfunction Planet({ currentPlanet, data, activeTab, setActiveTab }) {\r\n  const [isCore, setIsCore] = useState(false);\r\n  // Details\r\n  const [overview, setOverview] = useState(\"\");\r\n  const [overviewSource, setOverviewSource] = useState(\"\");\r\n\r\n  // Facts\r\n  const [rotationTime, setRotationTime] = useState(\"\");\r\n  const [revolutionTime, setRevolutionTime] = useState(\"\");\r\n  const [radius, setRadius] = useState(\"\");\r\n  const [avarageTemp, setAvarageTemp] = useState(\"\");\r\n\r\n  const getDetails = () => {\r\n    for (let i = 0; i < data.length; i++) {\r\n      if (data[i].name.toLowerCase() === currentPlanet) {\r\n        // Overview Assignment\r\n        if (activeTab === \"overview\") {\r\n          setOverview(data[i].overview.content);\r\n          setOverviewSource(data[i].overview.source);\r\n          setIsCore(false);\r\n        } else if (activeTab === \"structure\") {\r\n          setOverview(data[i].structure.content);\r\n          setOverviewSource(data[i].structure.source);\r\n          setIsCore(true);\r\n        } else if (activeTab === \"surface\") {\r\n          setOverview(data[i].geology.content);\r\n          setOverviewSource(data[i].geology.source);\r\n          setIsCore(false);\r\n        }\r\n\r\n        // Fact Assignment\r\n        setRotationTime(data[i].rotation);\r\n        setRevolutionTime(data[i].revolution);\r\n        setRadius(data[i].radius);\r\n        setAvarageTemp(data[i].temperature);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getDetails();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [currentPlanet, activeTab]);\r\n\r\n  return (\r\n    <div className='planet-container'>\r\n      <div className={`planet ${currentPlanet}-${isCore ? \"core\" : \"planet\"}`}>\r\n        <div\r\n          className={`geo-size ${\r\n            activeTab === \"surface\" ? `${currentPlanet}-geology` : \"\"\r\n          }`}\r\n        ></div>\r\n      </div>\r\n      <div className='planet-details'>\r\n        <div className='tablet-flex'>\r\n          <div className='details'>\r\n            <h2>{currentPlanet.toUpperCase()}</h2>\r\n            <p>{overview}</p>\r\n            <p className='source-link'>\r\n              Source:{\" \"}\r\n              <a href={overviewSource} target='_blank' rel='noreferrer'>\r\n                Wikipedia\r\n              </a>\r\n            </p>\r\n          </div>\r\n          <div className='tablet-details'>\r\n            <DetailsNav\r\n              key={data.name}\r\n              name={currentPlanet}\r\n              activeTab={activeTab}\r\n              setActiveTab={setActiveTab}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className='planet-facts'>\r\n          <PlanetFact title='rotation time' fact={rotationTime} />\r\n          <PlanetFact title='revolution time' fact={revolutionTime} />\r\n          <PlanetFact title='radius' fact={radius} />\r\n          <PlanetFact title='avarage temp.' fact={avarageTemp} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Planet;\r\n\r\nPlanet.propTypes = {\r\n  currentPlanet: PropTypes.string,\r\n  data: PropTypes.array,\r\n  activeTab: PropTypes.string,\r\n  setActiveTab: PropTypes.func,\r\n};\r\n","import React, { useState } from \"react\";\nimport DetailsNav from \"./components/Navbar/DetailsNav\";\n\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Planet from \"./components/Navbar/Planet\";\n\nimport data from \"./data.json\";\n\nfunction App() {\n  const [currentPlanet, setCurrentPlanet] = useState(\"mercury\");\n  const [activeTab, setActiveTab] = useState(\"overview\");\n\n  return (\n    <div className='App'>\n      <Navbar data={data} setPlanet={setCurrentPlanet} />\n      <section className='details-nav'>\n        <DetailsNav\n          name={currentPlanet}\n          activeTab={activeTab}\n          setActiveTab={setActiveTab}\n        />\n      </section>\n      <Planet\n        currentPlanet={currentPlanet}\n        data={data}\n        activeTab={activeTab}\n        setActiveTab={setActiveTab}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.scss\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}